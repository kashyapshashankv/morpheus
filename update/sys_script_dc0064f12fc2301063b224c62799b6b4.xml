<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_moda_morpheus_ca_credentials</collection>
        <condition>gs.getProperty("glide.sys.domain.partitioning") == 'true'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate multi-domain credentials</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var url = current.appliance_url;
	var username = current.username;
	var pwd = current.password.getDecryptedValue();
	var tenantId = current.morpheus_tenant;
	if(tenantId && tenantId != '') {
		username = tenantId.toString() + "\\" + username;
	}

	var authConfig = {};

	function verifyCredentials(instance,user, password, tenantId) {
		var r = new sn_ws.RESTMessageV2('x_moda_morpheus_ca.Morpheus Authenticate', 'post');
		r.setStringParameterNoEscape('username', username);
		r.setStringParameterNoEscape('url', url);
		r.setStringParameterNoEscape('password', pwd);

		authConfig.username = username;
		authConfig.password = pwd;
		authConfig.url = url;

		var response = r.executeAsync();
		response.waitForResponse(10);
		var responseBody = response.getBody();
		var parser = new global.JSON();
		var jsonBody = parser.decode(responseBody);

		if(response.getStatusCode() == 200) {
			gs.addInfoMessage("Tenant (" + tenantId + ") - Credentials are valid!");
			authConfig.access_token = jsonBody['access_token'];
			return true;
		} else {
			gs.addErrorMessage("Tenant (" + tenantId + ") - Failed to authenticate!  Verify credentials and route to appliance.");
			return false;
		}
	}

	var valid = verifyCredentials(url,username,pwd,tenantId);
	if(valid) {
		var utils = new x_moda_morpheus_ca.Utils();
		var versionCheckResults = utils.validateMorpheusVersion(tenantId, authConfig);
		if(versionCheckResults.success == false) {
			gs.addErrorMessage(versionCheckResults.msg);
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-18 22:31:32</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dc0064f12fc2301063b224c62799b6b4</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Validate multi-domain credentials</sys_name>
        <sys_overrides/>
        <sys_package display_value="Morpheus Catalog" source="x_moda_morpheus_ca">8d8b6bbf0ff07e009c84306be1050e67</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Morpheus Catalog">8d8b6bbf0ff07e009c84306be1050e67</sys_scope>
        <sys_update_name>sys_script_dc0064f12fc2301063b224c62799b6b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-18 22:34:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=dc0064f12fc2301063b224c62799b6b4"/>
</record_update>
